from typing import Optional, Any
import os
from dotenv import load_dotenv
from openai import OpenAI
from prompts_old import ERROR_MESSAGES
import json

# Load environment variables
load_dotenv()


class FinancierAgent:
    def __init__(self, api_key: Optional[str] = None, temperature: float = 0.3):
        self.api_key = api_key or os.getenv('DEEPSEEK_API_KEY')
        if not self.api_key:
            raise ValueError(
                "DeepSeek API key is required. Set it in .env file or pass to constructor.")

        self.client = OpenAI(
            api_key=self.api_key,
            base_url="https://api.deepseek.com"
        )
        self.temperature = temperature
        self.margin_data: Optional[str] = None
        self.impact_data: Optional[str] = None

    def set_margin_data(self, margin_data: str) -> None:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç–∏."""
        self.margin_data = margin_data

    def set_impact_data(self, impact_data: str) -> None:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤–ª–∏—è–Ω–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–æ–≤ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ."""
        self.impact_data = impact_data

    def ask_question(self, question: str, output: Optional[Any] = None, stream_output: Optional[Any] = None) -> str:
        if not self.margin_data and not self.impact_data:
            raise ValueError(
                "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ set_margin_data() –∏ set_impact_data() –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        context = ""

        if self.impact_data:
            context += f"–í–æ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤–ª–∏—è–Ω–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–æ–≤ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ (–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ –∏—Ö —Å–≤—è–∑—å —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏):\n{self.impact_data}\n"
        if self.margin_data:
            context += f"–í–æ—Ç –¥–∞–Ω–Ω—ã–µ –æ –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:\n{self.margin_data}\n\n"

        print("Financier Context: ", context)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
        # prompt = f"""
        #     –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤–ª–∏—è–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–æ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ—Ç–µ—Ä–∏.

        #     –°—Ç—Ä–æ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∫–æ–≥–æ-—Ç–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –Ω–∞–ø–∏—à–∏ "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö".

        #     –í—ã–≤–µ–¥–∏ –æ—Ç–≤–µ—Ç –≤ —Ç–æ—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–±–µ–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π):
        #     - –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: {{–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è}}
        #     - –í–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç: {{–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞}}
        #     - –ü—Ä–æ—Ü–µ–Ω—Ç –≤–ª–∏—è–Ω–∏—è: {{X%}}
        #     - –ü–æ—Ç–µ—Ä–∏ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: {{—Ä—É–±./—á–∞—Å}}

        #     üîπ **–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞:**
        #     - –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: –ù–∞—Å–æ—Å-1
        #     - –í–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç: –ë–µ–Ω–∑–∏–Ω –ê–ò-92
        #     - –ü—Ä–æ—Ü–µ–Ω—Ç –≤–ª–∏—è–Ω–∏—è: 30%
        #     - –ü–æ—Ç–µ—Ä–∏ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: 100 000 —Ä—É–±./—á–∞—Å

        #     - –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: –ö–æ–º–ø—Ä–µ—Å—Å–æ—Ä-2
        #     - –í–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç: –í–æ–¥–æ—Ä–æ–¥
        #     - –ü—Ä–æ—Ü–µ–Ω—Ç –≤–ª–∏—è–Ω–∏—è: 50%
        #     - –ü–æ—Ç–µ—Ä–∏ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: 150 000 —Ä—É–±./—á–∞—Å

        #     –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –Ω–µ—Ç, –≤—ã–≤–µ–¥–∏:
        #     "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è {{–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è}}
        # """

        newPrompt = f"""
            –ò–°–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á—Ç–∏):
            1. –í–ª–∏—è–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–æ–≤:
            {self.impact_data}
            2. –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤:
            {self.margin_data}

            {question}
        """

    #   –ó–∞–¥–∞—á–∏:
    #         1. –†–∞—Å—Å—á–∏—Ç–∞–π –ø–æ—Ç–µ—Ä–∏ –≤ —Ä—É–±–ª—è—Ö/—á–∞—Å
    #         2. –£—á–∏—Ç—ã–≤–∞–π –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∑–µ—Ä–≤–æ–≤
    #         3. –í—ã–¥–µ–ª–∏ –∫—Ä–∏—Ç–∏—á–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ

    #         –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ (—Å—Ç—Ä–æ–≥–æ JSON):
    #         {{
    #         "hourly_loss_rub": {{"–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ1": —á–∏—Å–ª–æ}},
    #         "most_critical": ["–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ1"]
    #         }}

        expander = output.expander(
            "–ü—Ä–æ–º–ø—Ç —Ñ–∏–Ω–∞–Ω—Å–∏—Å—Ç–∞", expanded=False)
        expander.text(newPrompt)

        
        full_response = ""

        stream = self.client.chat.completions.create(
            model="deepseek-chat",
            messages=[{"role": "user", "content": newPrompt}],
            temperature=self.temperature,
            response_format={"type": "json_object"},
            stream=True
        )

        for chunk in stream:
            if chunk.choices and chunk.choices[0].delta.content:
                full_response += chunk.choices[0].delta.content
                    
                try:
                    # –ü—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π JSON
                    parsed = json.loads(full_response)
                    stream_output.json(parsed)  # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                except json.JSONDecodeError:
                        # –ï—Å–ª–∏ JSON –µ—â–µ –Ω–µ –ø–æ–ª–Ω—ã–π, –≤—ã–≤–æ–¥–∏–º –∫–∞–∫ —Ç–µ–∫—Å—Ç
                    stream_output.code(full_response)

                # print('response', response)
        final_result = json.loads(full_response)
        print('Final response:', final_result)
        return final_result       
        # return 'bybyby'

    # –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞. –û–ø—Ä–µ–¥–µ–ª–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø–æ—Ç–µ—Ä—å. –û—Ü–µ–Ω–∏ –≤–ª–∏—è–Ω–∏–µ –æ—Ç–∫–∞–∑–æ–≤ –Ω–∞ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏.
